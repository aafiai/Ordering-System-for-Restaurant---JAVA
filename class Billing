class Billing

package myproject;

import java.util.*;
import java.awt.*;
import java.awt.event.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.Statement;

public class Billing implements WindowListener, ActionListener {
Frame billing;
Button submit;
Order order;
Label receipt;

Label salads[];

Billing(Order order1)
{
order = order1;

billing = new Frame();
billing.setSize(500,500);
billing.setVisible(true);
billing.addWindowListener(this);
billing.setLayout(null);

receipt = new Label("Your Receipt");
receipt.setBounds(175,50,100,30);
billing.add(receipt);

Label pastas[] = new Label[order.getPastaSize()];
Label pastasPrice[] = new Label[order.getPastaSize()];
Label salads[] = new Label[order.getSaladSize()];
Label saladsPrice[] = new Label[order.getSaladSize()];
String salad, pasta;
Integer saladPrice, pastaPrice , totalPrice = 0;

int height = 100;

for(int i = 0; i < order.getSaladSize(); i++ )
{
salad = order.getSalad(i);
saladPrice = order.getSaladPrice(i);

salads[i] = new Label(salad + " salad" );
saladsPrice[i] = new Label("$"+saladPrice);
salads[i].setBounds(70,height,130,30);
saladsPrice[i].setBounds(190,height,100,30);
height+=40;

billing.add(salads[i]);
billing.add(saladsPrice[i]);

totalPrice+=saladPrice;
}

for(int i = 0; i < order.getPastaSize(); i++ )
{
pasta = order.getPasta(i);
pastaPrice = order.getPastaPrice(i);

pastas[i] = new Label(pasta + " pasta" );
pastasPrice[i] = new Label("$"+pastaPrice);
pastas[i].setBounds(70,height,130,30);
pastasPrice[i].setBounds(190,height,100,30);
height+=40;

billing.add(pastas[i]);
billing.add(pastasPrice[i]);

totalPrice+=pastaPrice;
}

Label total = new Label("Total:");
Label price = new Label(Integer.toString(totalPrice));

Label line = new Label("====================================================+");

billing.add(line);
billing.add(total);
billing.add(price);
line.setBounds(40, height, 150, 30);
total.setBounds(70,height + 40, 100,30);
price.setBounds(190,height + 40, 70,30);

submit = new Button("Submit");
billing.add(submit);
submit.setBounds(270, 430, 50, 30);
submit.addActionListener(this);
}

public void actionPerformed(ActionEvent e)
{
enter();
}

public void enter()
{

String salad, pasta;
Integer saladPrice, pastaPrice;
//set up connection with sql database
try
{
    Class.forName("com.mysql.cj.jdbc.Driver");
   
    Connection con =DriverManager.getConnection("jdbc:mysql://localhost:3306/oops","root","123456789");
    Statement stmt = con.createStatement();
   
   
   
//  stmt.executeUpdate(query);
 
   


for(int i = 0; i < order.getSaladSize(); i++ )
{
salad = order.getSalad(i);
saladPrice = order.getSaladPrice(i);
String query =  "Insert into Kitchen (OrderName, price) values(?,?);";
PreparedStatement ps = con.prepareStatement(query);
ps.setString(1,salad);
ps.setString(2,Integer.toString(saladPrice));
int a=ps.executeUpdate();

}
for(int i = 0; i < order.getPastaSize(); i++ )
{
pasta = order.getPasta(i);
pastaPrice = order.getPastaPrice(i);

String query =  "Insert into Kitchen (OrderName, price) values(?,?);";
PreparedStatement ps = con.prepareStatement(query);
ps.setString(1,pasta);
ps.setString(2,Integer.toString(pastaPrice));
int a=ps.executeUpdate();
}

}  





catch (Exception e)
{
        System.out.print(e);
 

 
}              

billing.dispose();
new Feedback();

}

public void windowClosing(WindowEvent we)
    {
        System.exit(0);
    }

@Override
public void windowOpened(WindowEvent e) {}
@Override
public void windowClosed(WindowEvent e) {}
@Override
public void windowIconified(WindowEvent e) {}
@Override
public void windowDeiconified(WindowEvent e) {}
@Override
public void windowActivated(WindowEvent e) {}
@Override
public void windowDeactivated(WindowEvent e) {}


}


